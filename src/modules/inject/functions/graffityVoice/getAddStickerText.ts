const getAddStickerText = (lang: number) => {
  switch (lang) {
    case 0:
      return ["Введите ID стикера", "Доп. вложение в формате типID_IDВЛОЖЕНИЯ", "Ошибка при проверке стикера", "Стикер с таким ID не найден"];
    case 1:
      return ["Введіть ID стікера", "Дод. вкладення у форматі типID_IDВКЛАДЕННЯ", "Помилка при перевірці стікера", "Стікера з таким ID не знайдено"];
    case 454:
      return ["Введіть ID стікера", "Дод. вкладення у форматі типID_IDВКЛАДЕННЯ", "Помилка при перевірці стікера", "Стікера з таким ID не знайдено"];
    case 114:
      return ["Увядзіце ID стыкера", "Дад. ўкладанне ў фармаце тыпID_IDУКЛАДАННЯ", "Памылка пры праверцы сцікера", "Сцікер з такім ID не знойдзены"];
    case 2:
      return ["Увядзіце ID стыкера", "Дад. ўкладанне ў фармаце тыпID_IDУКЛАДАННЯ", "Памылка пры праверцы сцікера", "Сцікер з такім ID не знойдзены"];
    case 777:
      return ["Введите ID марки", "Доп. компромат в формате типID_IDКОМПРОМАТА", "Ошибка при проверке марки", "Марка с таким ID не найдена"];
    case 97:
      return ["Стикер идентификаторын енгізіңіз", "қосу. typeID_IDATTACHMENT пішіміндегі тіркеме", "Стикерді тексеру кезінде қате", "Мұндай ID бар стикер табылмады"];
    case 100:
      return ["Ввѣдитѣ ID стикѣра", "Допъ. вложѣнiя въ форматѣ типID_IDВЛОЖЕНИЯ", "Ошибка при проверкѣ стикѣра", "Стикеръ съ такимъ ID не найденъ"];
    default:
      return ["Enter sticker ID", "Add. attachment in the format typeID_ID ATTACHMENTS", "Error checking sticker", "Sticker with this ID not found"];
  }
};

export default getAddStickerText;
